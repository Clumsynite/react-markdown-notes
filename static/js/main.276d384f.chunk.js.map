{"version":3,"sources":["Components/Heading.js","Components/NoteModal.js","Components/NoteCard.js","App.js","index.js"],"names":["Title","Typography","Heading","onClick","className","align","justify","offset","span","style","paddingRight","icon","addAlt","width","height","ModalTitle","title","setTitle","useState","edit","setEdit","type","value","onChange","e","target","moment","fromNow","paddingLeft","display","cursor","trim","length","message","error","checkmarkOutline","color","editIcon","NoteModal","visible","setVisible","note","setNote","view","setView","backgroundColor","setBackgroundColor","generalHeight","NoteView","overflowY","plugins","gfm","children","centered","onCancel","footer","isFlipped","flipDirection","resize","paddingTop","textAlign","trigger","content","onChangeComplete","hex","colorPalette","checkedChildren","checked","notes","JSON","parse","localStorage","currentNote","created","Date","body","newNotes","setItem","stringify","success","saveIcon","NoteCard","index","deleteNote","DeleteNote","deleteIcon","extra","margin","hoverable","bordered","App","noteModal","setNoteModal","setNotes","splice","useEffect","preventDefault","flexDirection","alignItems","padding","map","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.276d384f.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Row, Col, Typography } from \"antd\";\r\n\r\nimport { Icon } from \"@iconify/react\";\r\nimport addAlt from \"@iconify-icons/carbon/add-alt\";\r\n\r\nconst { Title } = Typography;\r\n\r\nexport default function Heading({ onClick }) {\r\n  return (\r\n    <Row\r\n      className=\"shadow-sm p-3 bg-body rounded fixed\"\r\n      align=\"middle\"\r\n      justify=\"center\"\r\n    >\r\n      <Col offset={2} span={10}>\r\n        <Title>Clumsyknight's Notebook</Title>\r\n      </Col>\r\n      <Col span={4}>\r\n        <button\r\n          className=\"btn btn-outline-success d-flex align-items-center justify-content-between\"\r\n          onClick={onClick}\r\n        >\r\n          <div style={{ paddingRight: 4 }}>\r\n            <Icon icon={addAlt} width=\"24\" height=\"24\" />\r\n          </div>\r\n          New Note\r\n        </button>\r\n      </Col>\r\n      <Col span={2}></Col>\r\n    </Row>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { Modal, Row, Col, Switch, message, Popover } from \"antd\";\r\n\r\nimport ReactCardFlip from \"react-card-flip\";\r\nimport ReactMarkdown from \"react-markdown\";\r\nimport gfm from \"remark-gfm\";\r\nimport moment from \"moment\";\r\nimport { CompactPicker } from \"react-color\";\r\n\r\nimport { Icon } from \"@iconify/react\";\r\nimport saveIcon from \"@iconify-icons/carbon/save\";\r\nimport checkmarkOutline from \"@iconify-icons/carbon/checkmark-outline\";\r\nimport editIcon from \"@iconify-icons/carbon/edit\";\r\nimport colorPalette from \"@iconify-icons/carbon/color-palette\";\r\n\r\nconst ModalTitle = ({ title, setTitle }) => {\r\n  const [edit, setEdit] = useState(true);\r\n\r\n  return (\r\n    <Row align=\"middle\">\r\n      <Col span={14}>\r\n        {edit ? (\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            value={title}\r\n            onChange={(e) => setTitle(e.target.value)}\r\n          />\r\n        ) : (\r\n          `${title} - ${moment().fromNow()}`\r\n        )}\r\n      </Col>\r\n      <Col span={4} style={{ paddingLeft: 4 }}>\r\n        {edit ? (\r\n          <div\r\n            style={{ display: \"contents\", cursor: \"pointer\" }}\r\n            onClick={() => {\r\n              if (title.trim().length > 0) {\r\n                setEdit(false);\r\n              } else {\r\n                message.error(\"Can't set title empty\");\r\n              }\r\n            }}\r\n          >\r\n            <Icon\r\n              icon={checkmarkOutline}\r\n              color=\"#bebebe\"\r\n              height={38}\r\n              width={38}\r\n            />\r\n          </div>\r\n        ) : (\r\n          <div\r\n            style={{ display: \"contents\", cursor: \"pointer\" }}\r\n            onClick={() => setEdit(true)}\r\n          >\r\n            <Icon icon={editIcon} color=\"#bebebe\" height={38} width={38} />\r\n          </div>\r\n        )}\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default function NoteModal({ visible, setVisible }) {\r\n  const [title, setTitle] = useState(\"\");\r\n  const [note, setNote] = useState(\"\");\r\n  const [view, setView] = useState(false);\r\n  const [backgroundColor, setBackgroundColor] = useState(\"#fff\");\r\n\r\n  const generalHeight = \"50vh\";\r\n\r\n  const NoteView = () => {\r\n    return (\r\n      <div\r\n        className=\"form-control\"\r\n        style={{\r\n          height: generalHeight,\r\n          overflowY: \"auto\",\r\n          backgroundColor,\r\n        }}\r\n      >\r\n        <ReactMarkdown plugins={[gfm]} children={note} />\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const onNoteSave = () => {\r\n    if (title.trim().length < 1) {\r\n      message.error(\"Title Can't be empty\");\r\n      return false;\r\n    } else if (note.trim().length < 1) {\r\n      message.error(\"Can't save empty note\");\r\n      return false;\r\n    } else {\r\n      let notes = JSON.parse(localStorage.notes || \"[]\");\r\n      let currentNote = {\r\n        created: new Date(),\r\n        body: note,\r\n        title,\r\n        backgroundColor,\r\n      };\r\n      let newNotes = [...notes, currentNote];\r\n      localStorage.setItem(\"notes\", JSON.stringify(newNotes));\r\n      setNote(\"\");\r\n      setTitle(\"\");\r\n      setVisible(false);\r\n      message.success(\"Note saved successfully\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      title={<ModalTitle title={title} setTitle={setTitle} />}\r\n      centered\r\n      visible={visible}\r\n      onCancel={() => {\r\n        setVisible(false);\r\n      }}\r\n      footer={null}\r\n      width={\"50%\"}\r\n    >\r\n      <div>\r\n        <ReactCardFlip isFlipped={view} flipDirection=\"horizontal\">\r\n          <textarea\r\n            className=\"form-control\"\r\n            style={{\r\n              height: generalHeight,\r\n              resize: \"none\",\r\n              backgroundColor,\r\n            }}\r\n            value={note}\r\n            onChange={(e) => {\r\n              setNote(e.target.value);\r\n            }}\r\n          />\r\n          <NoteView />\r\n        </ReactCardFlip>\r\n        <Row style={{ paddingTop: 10 }} align=\"middle\">\r\n          <Col span={2} style={{ textAlign: \"center\" }}>\r\n            <div title=\"Select Background Color\">\r\n              <Popover\r\n                title=\"Select Background Color\"\r\n                trigger=\"click\"\r\n                content={\r\n                  <CompactPicker\r\n                    color={backgroundColor}\r\n                    onChangeComplete={(color) => setBackgroundColor(color.hex)}\r\n                  />\r\n                }\r\n              >\r\n                <Icon\r\n                  icon={colorPalette}\r\n                  color=\"#bebebe\"\r\n                  width=\"36\"\r\n                  height=\"36\"\r\n                />\r\n              </Popover>\r\n            </div>\r\n          </Col>\r\n          {!view && (\r\n            <Col offset={6} span={2}>\r\n              View\r\n            </Col>\r\n          )}\r\n          <Col offset={view ? 8 : 0} span={4}>\r\n            <Switch\r\n              checkedChildren={\"View\"}\r\n              checked={view}\r\n              onChange={setView}\r\n            />\r\n          </Col>\r\n          <Col span={10} style={{ textAlign: \"right\" }}>\r\n            <div\r\n              style={{ cursor: \"pointer\", display: \"contents\" }}\r\n              onClick={onNoteSave}\r\n              title=\"Save Note\"\r\n            >\r\n              <Icon icon={saveIcon} color=\"#bebebe\" width=\"50\" height=\"50\" />\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    </Modal>\r\n  );\r\n}\r\n","import { Card } from \"antd\";\r\nimport ReactMarkdown from \"react-markdown\";\r\nimport gfm from \"remark-gfm\";\r\nimport moment from \"moment\";\r\nimport { Icon } from \"@iconify/react\";\r\nimport deleteIcon from \"@iconify-icons/carbon/delete\";\r\n\r\nexport default function NoteCard({ note, index, deleteNote }) {\r\n  const { created, body, title, backgroundColor } = note;\r\n\r\n  const DeleteNote = () => {\r\n    return (\r\n      <div\r\n        style={{ display: \"contents\", cursor: \"pointer\" }}\r\n        onClick={() => deleteNote(index)}\r\n        title=\"Delete Note\"\r\n      >\r\n        <Icon icon={deleteIcon} color=\"#f00\" width=\"30\" height=\"30\" />\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Card\r\n      title={`${title} - ${moment(created).fromNow()}`}\r\n      extra={<DeleteNote />}\r\n      style={{\r\n        height: \"45vh\",\r\n        overflowY: \"auto\",\r\n        width: \"60vw\",\r\n        margin: \"10px 0\",\r\n        backgroundColor,\r\n      }}\r\n      hoverable\r\n      bordered\r\n    >\r\n      <ReactMarkdown plugins={[gfm]} children={body} />\r\n    </Card>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\n\nimport Heading from \"./Components/Heading\";\nimport NoteModal from \"./Components/NoteModal\";\nimport NoteCard from \"./Components/NoteCard\";\n\nimport \"./App.css\";\n\nexport default function App() {\n  const [noteModal, setNoteModal] = useState(false);\n  const [notes, setNotes] = useState(JSON.parse(localStorage.notes || \"[]\"));\n\n  const onNewNoteClicked = (e) => {\n    e.preventDefault();\n    setNoteModal(true);\n  };\n\n  const deleteNote = (index) => {\n    const notes = JSON.parse(localStorage.notes || \"[]\");\n    if (notes.length > 0) {\n      notes.splice(index, 1);\n      localStorage.setItem(\"notes\", JSON.stringify(notes));\n      setNotes(notes);\n    }\n  };\n\n  useEffect(() => {\n    setNotes(JSON.parse(localStorage.notes || \"[]\"));\n  }, [noteModal]);\n\n  return (\n    <div className=\"App\">\n      <Heading onClick={onNewNoteClicked} />\n      {noteModal && <NoteModal visible={noteModal} setVisible={setNoteModal} />}\n      <div\n        style={{\n          display: \"flex\",\n          flexDirection: \"column\",\n          alignItems: \"center\",\n          padding: \"40px 0\",\n        }}\n      >\n        {notes.map((note, index) => (\n          <NoteCard\n            key={index}\n            note={note}\n            index={index}\n            deleteNote={deleteNote}\n          />\n        ))}\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"antd/dist/antd.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}